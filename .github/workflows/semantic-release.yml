name: Semantic Release

on:
  push:
    branches:
      - release/[0-9]+.[0-9]+
  workflow_dispatch:
    inputs:
      merge_destination:
        description: Branch to merge into (only used when dispatching from develop branch)
        required: false
      debug:
        description: Run debug workflow
        required: true
        default: 'false'
    branches:
      - develop
      - release/*

jobs:
  debug:
    runs-on: ubuntu-latest
    if: github.event.inputs.debug == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print next version
        uses: python-semantic-release/python-semantic-release@master
        with:
          root_options: -vv --noop --strict

  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    if: github.event.inputs.debug != 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/heads/release/') && 'master' || '' }}

      - name: Print next version
        uses: python-semantic-release/python-semantic-release@master
        with:
          root_options: -vv --noop --strict
        id: print

      - name: Create new release branch
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop' && github.event.inputs.merge_destination == ''
        run: |
          VERSION=${{ steps.print.outputs.version }}
          MAJOR_MINOR_VERSION=$(echo $VERSION | cut -d. -f1,2)
          git show-ref --verify --quiet refs/heads/release/$MAJOR_MINOR_VERSION || git checkout -b release/$MAJOR_MINOR_VERSION

      - name: Merge changes into existing release branch
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop' && github.event.inputs.merge_destination != ''
        run: |
          git show-ref --verify --quiet refs/heads/${{ github.event.inputs.merge_destination }} && git checkout ${{ github.event.inputs.merge_destination }}
          git merge --ff-only develop

      - name: Sync version to .env file
        run: |
          grep -v '^VERSION=' .env > .env.tmp || echo "grep exit status: $?"
          cat .env.tmp || echo "cat .env.tmp output: $?"
          mv .env.tmp .env || echo "mv exit status: $?"
          echo "VERSION=${{ steps.print.outputs.version }}" >> .env || echo "echo exit status: $?"

      - name: Install p7zip
        run: sudo apt-get update && sudo apt-get install -y p7zip-full

      - name: Run build script
        run: |
          chmod +x build.sh
          ./build.sh ci

      - name: Stage .env file
        run: git add .env

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: Zhang_Jia_Rong
          git_committer_email: zhang-jia-rong@outlook.com
          ssh_public_signing_key: ${{ secrets.SSH_PUBLIC_SIGNING_KEY }}
          ssh_private_signing_key: ${{ secrets.SSH_PRIVATE_SIGNING_KEY }}
          root_options: -vv --strict
        id: semantic

      - name: Promote pre-release to release
        if: github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/heads/release/')
        run: |
          # Existing commands to promote pre-release to release...

          # Merge back to the original branch
          git checkout ${{ github.ref }}
          git merge --ff-only master
          git push origin ${{ github.ref }}

          # Merge to develop and push
          git checkout develop
          git merge --ff-only master
          git push origin develop

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/bake-action@v4
        with:
          push: true
          set: |
            mkdocs.tags=ckwing/duospaced-mkdocs-material:${{ steps.semantic.outputs.version }}
            ${{ contains(steps.semantic.outputs.version, '-') && 'mkdocs.tags=ckwing/duospaced-mkdocs-material:next' || 'mkdocs.tags=ckwing/duospaced-mkdocs-material:latest' }}
