[build-system]
requires = [
  "hatchling",
  "hatch-requirements-txt",
  "hatch-nodejs-version>=0.3.0",
  # Needed for "Framework :: MkDocs"
  "trove_classifiers>=2023.10.18",
]
build-backend = "hatchling.build"

[project]
name = "duospaced-mkdocs-material"
dynamic = [
  "version",
  "dependencies",
  "license",
  "description",
  "authors",
  "keywords",
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: MkDocs",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: JavaScript",
  "Programming Language :: Python",
  "Topic :: Documentation",
  "Topic :: Software Development :: Documentation",
  "Topic :: Text Processing :: Markup :: HTML",
]

[project.optional-dependencies]
recommended = [
  "mkdocs-minify-plugin~=0.7",
  "mkdocs-redirects~=1.2",
  "mkdocs-rss-plugin~=1.6",
]
git = [
  "mkdocs-git-committers-plugin-2~=1.1",
  "mkdocs-git-revision-date-localized-plugin~=1.2,>=1.2.4",
]
imaging = ["pillow~=10.2", "cairosvg~=2.6"]

[project.urls]
Documentation = "https://zhang-jia-rong.github.io/duospaced-mkdocs-material/"
Source = "https://github.com/zhang-jia-rong/duospaced-mkdocs-material"
Issues = "https://github.com/zhang-jia-rong/duospaced-mkdocs-material/issues"

[project.entry-points."mkdocs.plugins"]
"material/blog" = "material.plugins.blog.plugin:BlogPlugin"
"material/group" = "material.plugins.group.plugin:GroupPlugin"
"material/info" = "material.plugins.info.plugin:InfoPlugin"
"material/offline" = "material.plugins.offline.plugin:OfflinePlugin"
"material/privacy" = "material.plugins.privacy.plugin:PrivacyPlugin"
"material/search" = "material.plugins.search.plugin:SearchPlugin"
"material/social" = "material.plugins.social.plugin:SocialPlugin"
"material/tags" = "material.plugins.tags.plugin:TagsPlugin"

[project.entry-points."mkdocs.themes"]
material = "material.templates"

[tool.hatch.version]
source = "nodejs"

[tool.hatch.metadata.hooks.nodejs]
fields = ["license", "description", "authors", "keywords", "urls"]

[tool.hatch.metadata.hooks.requirements_txt]
filename = "requirements.txt"

[tool.hatch.build.targets.wheel]
include = ["/material"]

[tool.hatch.build.targets.sdist]
include = ["/material", "/package.json", "/requirements.txt"]
exclude = ["/material/overrides"]

[tool.semantic_release]
assets = []
commit_message = "chore: release {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"

[tool.semantic_release.branches.master]
match = "master"
prerelease = false

[tool.semantic_release.branches.release]
match = "(release\\/\\d+.\\d+|develop)"
prerelease_token = "rc"
prerelease = true

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "Zhang Jia Rong <zhang-jia-rong@outlook.com>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false
